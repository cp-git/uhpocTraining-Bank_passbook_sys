package com.cpa.controller;

import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.cpa.exception.CPException;
import com.cpa.service.CustService;
import com.cpa.serviceimpl.CustServiceImpl;

public class MainController {
//comment
	
	public static void employeeOption() {
		try {
			CustService custService = new CustServiceImpl();

			System.out.println(
					"Please enter the details for Customer  to be inserted for following fields customer name, customer address1, customer address1, customer city,customer phone respectively");

			Pattern pattern = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
			Pattern num_pattern = Pattern.compile("[^0-9]");

			Scanner sc = new Scanner(System.in);

//			System.out.println("Enter Pan Number");
//			String emp_panno = sc.next();
//			Matcher matcher1 = pattern.matcher(emp_panno);
//			boolean isStringContainsSpecialCharacter1 = matcher1.find();
//
//			if (isStringContainsSpecialCharacter1) {
//				throw new CPException("001", "Invalid Pan Card number ");
//			}
//
//			System.out.println("Enter PF Number");
//			String emp_pfno = sc.next();
//			Matcher matcher2 = pattern.matcher(emp_pfno);
//			boolean isStringContainsSpecialCharacter2 = matcher2.find();
//			if (isStringContainsSpecialCharacter2) {
//				throw new CPException("002", "Invalid PF number ");
//			}
//
//			System.out.println("Enter Company Id ");
//			int company_id = sc.nextInt();

			System.out.println("Enter Customer Name");
			String cust_name = sc.next();
			Matcher matcher3 = pattern.matcher(cust_name);
			boolean isStringContainsSpecialCharacter3 = matcher3.find();
			if (isStringContainsSpecialCharacter3) {
				throw new CPException("004", "Invalid Customer Name ");
			}
			
			System.out.println("Enter Customer Address1");
			String cust_address1 = sc.next();
			
			System.out.println("Enter Customer Address2");
			String cust_address2 = sc.next();
			
			
			System.out.println("Enter Customer City");
			String cust_city = sc.next();
			Matcher matcher4 = pattern.matcher(cust_city);
			boolean isStringContainsSpecialCharacter4 = matcher4.find();
			if (isStringContainsSpecialCharacter4) {
				throw new CPException("004", "Invalid Customer City ");
			}
			
			System.out.println("Enter Customer Phone");
			String cust_phone = sc.next();
			
			
//			System.out.println("Enter Basic Amount");
//			Double basic_amt = sc.nextDouble();
//
//			System.out.println("Enter Hra Amount");
//			Double hra_amt = sc.nextDouble();
//
//			System.out.println("Enter Car allowance   Amount");
//			Double car_allowance_amt = sc.nextDouble();
//
//			System.out.println("Enter Phone Internet Bill Amount");
//			Double phone_internet_bill_amt = sc.nextDouble();

			if (empService.isEmpExists(emp_name, emp_panno)) {
				System.out.println("Employee already exists");
				System.out.println("Do you want insert new employee details, press 'Y' if Yes else press 'N' if No");

				Scanner sc_y_n = new Scanner(System.in);
				String yn_option = sc_y_n.next();

				switch (yn_option.toUpperCase()) {
				case "Y":

					System.out.println(
							"Please enter the details for Employee to be inserted for following fields employee id,employee pan number,employee pf number, company id, employee name respectively");

					Scanner sc2 = new Scanner(System.in);

					System.out.println("Enter Pan Number");
					String renew_emp_panno = sc2.next();
					Matcher matcher4 = pattern.matcher(renew_emp_panno);
					boolean isStringContainsSpecialCharacter4 = matcher4.find();

					if (isStringContainsSpecialCharacter4) {
						throw new CPException("001", "Invalid Pan Card number ");
					}

					System.out.println("Enter PF Number");
					String renew_emp_pfno = sc2.next();
					Matcher matcher5 = pattern.matcher(renew_emp_pfno);
					boolean isStringContainsSpecialCharacter5 = matcher5.find();
					if (isStringContainsSpecialCharacter5) {
						throw new CPException("002", "Invalid PF number ");
					}

					System.out.println("Enter Company Id ");
					int renew_company_id = sc2.nextInt();

					System.out.println("Enter Employee Name");
					String renew_emp_name = sc2.next();
					Matcher matcher6 = pattern.matcher(renew_emp_name);
					boolean isStringContainsSpecialCharacter6 = matcher6.find();
					if (isStringContainsSpecialCharacter6) {
						throw new CPException("004", "Invalid Employee Name ");
					}

					System.out.println("Enter Basic Amount");
					Double renew_basic_amt = sc.nextDouble();

					System.out.println("Enter Hra Amount");
					Double renew_hra_amt = sc.nextDouble();

					System.out.println("Enter Car allowance   Amount");
					Double renew_car_allowance_amt = sc.nextDouble();

					System.out.println("Enter Phone Internet Bill Amount");
					Double renew_phone_internet_bill_amt = sc.nextDouble();

					EmpService renew_empService = new EmpServImpl();

					renew_empService.createEmployee(renew_emp_name, renew_emp_panno, renew_emp_pfno, renew_company_id);
					try {
						int employee_id = renew_empService.getEmpId(renew_emp_panno);
						renew_empService.addSalStruct(renew_basic_amt, renew_hra_amt, renew_car_allowance_amt,
								renew_phone_internet_bill_amt, employee_id);
					} catch (CPException e) {
						System.out.println("Employee creation failed");
					} catch (SQLException e) {
						System.out.println("Employee creation failed");
					}
					break;

				case "N":

					break;

				}

			}

			else {

				empService.createEmployee(emp_name, emp_panno, emp_pfno, company_id);
				try {

					int employee_id = empService.getEmpId(emp_panno);
					empService.addSalStruct(basic_amt, hra_amt, car_allowance_amt, phone_internet_bill_amt,
							employee_id);
				} catch (CPException e) {
					System.out.println("Employee Creation Failed");
				} catch (SQLException e) {
					System.out.println("Employee creation failed");
				}
			}

		} catch (InputMismatchException ime) {

			System.out.println("Please enter a valid input");
			// System.exit(0);
		} catch (CPException e) {
			// TODO Auto-generated catch block
			System.out.println("Employee creation failed");
		}

	}
	
	
	public static void main(String[] args) throws Exception {

		while (true) {
			System.out.println("============= Main Menu ============");
			System.out.println("1. Create Company Details");
			System.out.println("2. Create Employee Details");
			System.out.println("3. Print Pay slip");
			System.out.println("4. Exit");
			Scanner scanner = new Scanner(System.in);
			int option = scanner.nextInt();
			switch (option) {
			case 1:
				try {
				
				} catch (InputMismatchException ime) {
					System.out.println("invalid input");
				}
				break;
			case 2:
				try {
					
				} catch (InputMismatchException ime) {
					System.out.println("invalid input");
				}
				break;

			case 3:
				break;
			case 4:
				System.exit(0);
				break;

			default:
				System.out.println("Please enter valid menu option from 1-4");
				break;

			}
		}

	}

	
	
}
