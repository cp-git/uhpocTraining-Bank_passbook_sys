package com.cpa.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.cpa.entity.Transaction;
import com.cpa.exception.CPException;
import com.cpa.service.CustService;
import com.cpa.service.TransService;
import com.cpa.serviceimpl.CustServiceImpl;
import com.cpa.serviceimpl.TransServiceImpl;

public class MainController {
//comment
	
	public static void customerOption() {
		try {
			CustService custService = new CustServiceImpl();

			System.out.println(
					"Please enter the details for Customer  to be inserted for following fields customer name, customer address1, customer address1, customer city,customer phone respectively");

			Pattern name_pattern = Pattern.compile("[^a-z]", Pattern.CASE_INSENSITIVE);
			Pattern pattern = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
			Pattern num_pattern = Pattern.compile("[^0-9]");

			Scanner sc = new Scanner(System.in);


			System.out.println("Enter Customer Name");
			String cust_name = sc.next();
			Matcher matcher3 = name_pattern.matcher(cust_name);
			boolean isStringContainsSpecialCharacter3 = matcher3.find();
			if (isStringContainsSpecialCharacter3) {
				throw new CPException("004", "Invalid Customer Name ");
			}
			
			System.out.println("Enter Customer Phone");
			String cust_phone = sc.next();
			Matcher matcher5 = num_pattern.matcher(cust_phone);
			boolean isStringContainsSpecialCharacter5 = matcher5.find();
			if (isStringContainsSpecialCharacter5 || cust_phone.length() < 10 || cust_phone.length() > 10  ) {
				throw new CPException("004", "Invalid Customer Phone ");
			}
			
			
			

			if (custService.checkCust(cust_phone)) {
				System.out.println("Customer already exists");
				System.out.println("Do you want to add another Customer [Y]es or [N]o?");

				Scanner sc_y_n = new Scanner(System.in);
				String yn_option = sc_y_n.next();

				switch (yn_option.toUpperCase()) {
				case "Y":

					System.out.println(
							"Please enter the details for Customer  to be inserted for following fields customer name, customer address1, customer address1, customer city,customer phone respectively");

					Scanner sc2 = new Scanner(System.in);

					System.out.println("Enter Customer Name");
					String loop_cust_name = sc2.next();
					Matcher matcher6 = name_pattern.matcher(loop_cust_name);
					boolean isStringContainsSpecialCharacter6 = matcher6.find();
					if (isStringContainsSpecialCharacter6) {
						throw new CPException("004", "Invalid Customer Name ");
					}
					
					System.out.println("Enter Customer Phone");
					String loop_cust_phone = sc.next();
					Matcher matcher8 = num_pattern.matcher(loop_cust_phone);
					boolean isStringContainsSpecialCharacter8 = matcher8.find();
					if (isStringContainsSpecialCharacter8 || cust_phone.length() < 10 || cust_phone.length() > 10  ) {
						throw new CPException("004", "Invalid Customer Phone ");
					}
					

					CustService loopcustService =new CustServiceImpl();

					try {
						
						if(loopcustService.checkCust(loop_cust_phone)) {
							System.out.println("Customer already exists");
							break;
						}
						else {
							

							
							System.out.println("Enter Customer Address1");
							String loop_cust_address1 = sc.next();
							
							System.out.println("Enter Customer Address2");
							String loop_cust_address2 = sc.next();
							
							
							System.out.println("Enter Customer City");
							String loop_cust_city = sc.next();
							Matcher matcher7 = name_pattern.matcher(loop_cust_city);
							boolean isStringContainsSpecialCharacter7 = matcher7.find();
							if (isStringContainsSpecialCharacter7) {
								throw new CPException("004", "Invalid Customer City ");
							}
							
							
						String loop_acc_num = loopcustService.addCust( loop_cust_name, loop_cust_address1,loop_cust_address2,loop_cust_city, loop_cust_phone);
						System.out.println("Account number for "+loop_cust_name+ " is "+loop_acc_num);
						}
					} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				
					break;

				case "N":

					break;
				
				default:
					System.out.println("Invalid input");
					
					break;
				}
				
			
					
			}

				
			else {
				System.out.println("Enter Customer Address1");
				String cust_address1 = sc.next();
				
				System.out.println("Enter Customer Address2");
				String cust_address2 = sc.next();
				
				
				System.out.println("Enter Customer City");
				String cust_city = sc.next();
				Matcher matcher4 = name_pattern.matcher(cust_city);
				boolean isStringContainsSpecialCharacter4 = matcher4.find();
				if (isStringContainsSpecialCharacter4) {
					throw new CPException("004", "Invalid Customer City ");
				}
				
				
				try {
					String acc_num = custService.addCust( cust_name,cust_address1, cust_address2,cust_city, cust_phone);
					System.out.println("Account number for "+cust_name+ " is "+ acc_num);
				} catch (SQLException | IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			}

		
			}
   catch (InputMismatchException ime) {

			System.out.println("Please enter a valid input");
			// System.exit(0);
		} 
		catch (CPException e) {
			// TODO Auto-generated catch block
			System.out.println("Customer creation failed");
		}

	}
	
	
	public static void transactionOption() throws CPException, SQLException, IOException {
		try {
		Transaction transaction = new Transaction();
		TransService transService = new TransServiceImpl();
		System.out.println(
				"Please enter the customer account number, transaction date and tranasaction details, credit amount and debit amount respectively");

		Pattern pattern = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
		Pattern num_pattern = Pattern.compile("[0-9]");

		Scanner sc = new Scanner(System.in);


		System.out.println("Enter Customer Account Number");
		String acc_num = sc.next();
		Matcher matcher3 = pattern.matcher(acc_num);
		boolean isStringContainsSpecialCharacter3 = matcher3.find();
		if (isStringContainsSpecialCharacter3) {
			throw new CPException("001", "Invalid Customer account Number ");
		}
		
		System.out.println("Enter transaction date");
		String tran_date = sc.next();
		Matcher matcher4 = pattern.matcher(tran_date);
		boolean isStringContainsSpecialCharacter4 = matcher4.find();
		if (isStringContainsSpecialCharacter4) {
			throw new CPException("004", "Invalid transaction date");
		}
		
		System.out.println("Enter transaction details");
		String tran_details = sc.next();
		Matcher matcher5 = pattern.matcher(tran_date);
		boolean isStringContainsSpecialCharacter5 = matcher5.find();
		if (isStringContainsSpecialCharacter5) {
			throw new CPException("004", "Invalid transaction details");
		}
		
		System.out.println("Do you want to enter credit or debit amount .Press C  for credit and D for debit amount ");
		
		String c_d_option = sc.next();
		switch(c_d_option.toUpperCase())
		{
		case "C":
			try {
			System.out.println("Please enter credit amount");
			Double credit_amt = sc.nextDouble();
			
			Double debit_amt = 0.0d;
			transService.addTranDetails(tran_date, tran_details, credit_amt, debit_amt, acc_num);
			}
			catch(InputMismatchException e)
			{System.out.println("Invalid credit amount");}
			break;
		case "D":
			try {
				System.out.println("Please enter debit amount");
				Double debit_amt = sc.nextDouble();
				
				Double credit_amt = 0.0d;
				transService.addTranDetails(tran_date, tran_details, credit_amt, debit_amt, acc_num);
				}
				catch(InputMismatchException e)
				{System.out.println("Invalid debit amount");}
			break;
		default :
			System.out.println("Invalid input");
			break;
		}
		}
		
		catch (SQLException e) {
			System.out.println();
		}
		catch (IOException e) {
			// TODO: handle exception
			System.out.println();
		}
		
		
	}
	
	public static void main(String[] args) throws Exception {

		while (true) {
			System.out.println("============= Main Menu ============");
			System.out.println("1. Create Company Details");
			System.out.println("2. Create Transaction Details");
			System.out.println("3. Print Bank Passbook");
			System.out.println("4. Exit");
			Scanner scanner = new Scanner(System.in);
			int option = scanner.nextInt();
			switch (option) {
			case 1:
				try {
				customerOption();
				} catch (InputMismatchException ime) {
					System.out.println("invalid input");
				}
				break;
			case 2:
				try {
				transactionOption();
				} catch (InputMismatchException ime) {
					System.out.println("Invalid input");
				}
				break;

			case 3:
				break;
			case 4:
				System.exit(0);
				break;

			default:
				System.out.println("Please enter valid menu option from 1-4");
				break;

			}
		}

	}

	
	
}
